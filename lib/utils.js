// Generated by CoffeeScript 1.4.0
(function() {
  var Utils, colors, printResutls;

  printResutls = require('util').print;

  colors = require('colors');

  Utils = (function() {

    function Utils() {}

    Utils.prototype.convertToDate = function(link) {
      return parseInt(link.match(/\/[0-9]+_/g)[0].replace(/\//, '').replace(/_/, '')) * 100;
    };

    Utils.prototype.isInteger = function(str) {
      if (str == null) {
        str = "";
      }
      if (str.search(/^[0-9]+$/g) === -1) {
        return false;
      } else {
        return true;
      }
    };

    Utils.prototype._getTime = function(mms) {
      var min, result, sec, totalsec;
      totalsec = Math.floor(mms / 1000);
      sec = totalsec % 60;
      min = Math.floor(totalsec / 60);
      if (min !== 0) {
        return result = min + "m" + sec + "s";
      } else {
        return result = sec + "s";
      }
    };

    Utils.prototype._getTimeRemain = function(avgspeed, stats) {
      var min, result, sec, secondsLeft;
      secondsLeft = Math.round((stats.totalItems - stats.totalItemCount) / avgspeed);
      sec = secondsLeft % 60;
      min = Math.floor(secondsLeft / 60);
      if (min !== 0) {
        return result = min + "m" + sec + "s";
      } else {
        return result = sec + "s";
      }
    };

    Utils.prototype.printFinalResult = function(stats) {
      stats.totalDuration = Date.now() - stats.markedTimer;
      console.log("");
      console.log(" |------------------------------------------------------|");
      console.log(" | " + ("TABLE: " + stats.currentTable).blue);
      console.log(" |------------------------------------------------------|");
      console.log(" | The number of items:\t\t\t" + stats.totalItemCount + "\t\t|");
      console.log(" | The number of items added to DB:\t" + stats.passedItemCount + "\t\t|");
      console.log(" | Total items failed:\t\t\t" + stats.failedItemCount + "\t\t|");
      console.log(" | The process completed in:\t\t" + this._getTime(stats.totalDuration, stats) + "\t\t|");
      console.log(" | The average speed:\t\t\t" + Math.round(stats.totalItemCount / stats.totalDuration * 1000) + " item/s" + "\t|");
      return console.log(" |------------------------------------------------------|");
    };

    Utils.prototype.printUpdateRunning = function(id, stats, info) {
      var message, tempDuration;
      tempDuration = Date.now() - stats.markedTimer;
      message = " |" + ("" + info).inverse.magenta;
      message += " | t:" + this._getTime(tempDuration);
      message += " | id:" + id;
      message += " | n:" + stats.totalItemCount;
      message += " | pass:" + stats.passedItemCount;
      message += " | fail:" + stats.failedItemCount;
      message += " | speed:" + Math.round(stats.totalItemCount / tempDuration * 1000) + "|\r";
      return printResutls(message);
    };

    Utils.prototype.printRunning = function(stats) {
      var message, percent, tempDuration;
      tempDuration = Date.now() - stats.markedTimer;
      percent = stats.totalItemCount / stats.totalItems * 100;
      message = " | " + percent.toFixed(2) + "%";
      message += " | t:" + this._getTime(tempDuration, stats);
      message += " | id:" + stats.currentId;
      message += " | n:" + stats.totalItemCount;
      message += " | pass:" + stats.passedItemCount;
      message += " | fail:" + stats.failedItemCount;
      message += " | speed:" + Math.round(stats.totalItemCount / tempDuration * 1000);
      message += " | t_left:" + this._getTimeRemain(stats.totalItemCount / tempDuration * 1000, stats) + "|\r";
      return printResutls(message);
    };

    Utils.prototype.test = function() {
      return console.log("daonguyenanbinh");
    };

    return Utils;

  })();

  module.exports = Utils;

}).call(this);
