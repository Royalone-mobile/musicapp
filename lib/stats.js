// Generated by CoffeeScript 1.4.0
(function() {
  var Site, Stats, fs,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Site = require("./Site");

  fs = require('fs');

  Stats = (function(_super) {

    __extends(Stats, _super);

    function Stats() {
      Stats.__super__.constructor.call(this, "XX");
      this.connect();
    }

    Stats.prototype.recordCount = function(tables, message) {
      var itemCount, items, table, tableCount, totalTables, _i, _len, _qs, _results;
      tableCount = 0;
      totalTables = tables.length;
      itemCount = 0;
      items = [];
      _results = [];
      for (_i = 0, _len = tables.length; _i < _len; _i++) {
        table = tables[_i];
        _qs = "select count(*) as count from " + table;
        _results.push(this.connection.query(_qs, function(err, results) {
          var result, _j, _len1;
          if (err) {
            return console.log("cannt not get total songs from table");
          } else {
            tableCount += 1;
            for (_j = 0, _len1 = results.length; _j < _len1; _j++) {
              result = results[_j];
              itemCount += result.count;
              items.push(result.count);
            }
            if (tableCount === totalTables) {
              console.log(JSON.stringify(tables));
              console.log(JSON.stringify(items));
              return console.log(message + itemCount);
            }
          }
        }));
      }
      return _results;
    };

    Stats.prototype.fetchTable = function() {
      var _q,
        _this = this;
      _q = "show tables";
      return this.connection.query(_q, function(err, results) {
        var albumTables, item, songTables, table, videosTables, _i, _len;
        if (err) {
          return console.log("eroore babay");
        } else {
          songTables = [];
          albumTables = [];
          videosTables = [];
          for (_i = 0, _len = results.length; _i < _len; _i++) {
            item = results[_i];
            table = item.Tables_in_anbinh;
            if (table.match(/Songs$/)) {
              songTables.push(table);
            }
            if (table.match(/[a-zA-Z]+Albums$/)) {
              albumTables.push(table);
            }
            if (table.match(/Videos$/)) {
              videosTables.push(table);
            }
          }
          _this.recordCount(albumTables, "total albums is ");
          _this.recordCount(songTables, "total songs is ");
          return _this.recordCount(videosTables, "total videos is ");
        }
      });
    };

    return Stats;

  })(Site);

  module.exports = Stats;

}).call(this);
